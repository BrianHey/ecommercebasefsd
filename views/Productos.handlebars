<div class="p-5">

    {{> Productos/Form}}

    {{> Productos/Table}}

    {{> Productos/Modal}}

</div>

<script>

    const camposLengt = $("label").length
    const sizes = ["S", "M", "L", "XL", "XXL"]

    const sizesSelect = document.getElementById("sizes")
    sizes.forEach(s => sizesSelect.innerHTML += `<option value="${s}">${s}</option>`)

    let categories;
    let categoriesNames;
    $(document).ready(async () => {
        categories = (await axios.get("http://localhost:3000/categories")).data
        categoriesNames = categories.map(c => c.name)
        let categoriesSelect = document.getElementById("categories")
        categoriesNames.forEach(c => {
            categoriesSelect.innerHTML += `<option value="${c}">${c}</option>`
        })
    })


    $("form").submit(async (e) => {
        e.preventDefault()

        /*
                const file = $("input[type='file']")[0].files[0]
        
                const data =  new FormData()
                data.append('target', file)
                
                try {
                    axios.post("http://localhost:3000/file", data)
                } catch (e) {
                    console.log(e)
                }
        */


        let elements = Array.from(e.target).map(i => i.type == "text" || i.type == "number" || i.type == "select-one" ? i.value : i.type == "file" ? i.files : i.type == "radio" && i.checked ? i.value : false)
        elements = elements.filter(i => i)
        let length_Final = elements.length
        let [model, stock, price, image, category, description, size, gender, color] = elements

        image = image[0]
        console.log(image)

        let validate = true
        length_Final < camposLengt ? (alert("Te falta poner algo mi bro"), validate = false)
            : stock < 0 || price < 0 ? (alert("El stock y el precio deben ser solo números positivos"), validate = false)
                : image.size > 5000000 || image.type.split("/")[0] !== "image" ? (alert("El archivo debe ser una imagen de máximo 5MB"), validate = false)
                    : !categoriesNames.includes(category) || !sizes.includes(size) ? (alert("Alerta de hack"), validate = false) : false

        category = categories.find(c => c.name == category).id

        let formDataImage = new FormData()
        formDataImage.append("image", image)
        if (validate) {


            const urlImage = (await axios.post("/files", formDataImage)).data
            await axios.post("/productos",

                [stock, price, urlImage, category, description, size, gender, color, model]
            )
        }

        else {

        }

    })


    /*
        var formData = new FormData();
        var imagefile = document.querySelector('#file');
        formData.append("image", imagefile.files[0]);
        axios.post('upload_file', formData, {
            headers: {
                'Content-Type': 'multipart/form-data'
            }
        })
    */
</script>

